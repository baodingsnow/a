```java
   @Override
    public void download(Long id, HttpServletResponse response) {
        InputStream inputStream = null;
        ServletOutputStream outputStream = null;
        String url=remoteSysConfigService.getConfigKey("idp.artifactory.url").getMsg().toString()+remoteSysConfigService.getConfigKey("idp.artifactory.downloadInterface").getMsg().toString();
        try {
            //TODO  提取出文件后缀
            Map<String, String> headers = new HashMap<>();
            headers.put("X-JFrog-Art-Api", remoteSysConfigService.getConfigKey("idp.artifactory.token").getMsg().toString());
            //三个路径地址对应的文件都要下载
            ArtifactoryVo artifactoryVo=baseMapper.selectArtifactoryUrlById(id);
            String address=null;

            if (TEST_IS_FINISHED.equals(artifactoryVo.getState())){
                address=artifactoryVo.getIntegrationArtifactoryFullUrl();
            }
            if (TEST_IN_PROCESS.equals(artifactoryVo.getState())){
                address=artifactoryVo.getTestArtifactoryUrl();
            }
            if (DID_NOT_TEST.equals(artifactoryVo.getState())){
                address=artifactoryVo.getDevelopArtifactoryUrl();
            }
            inputStream = HttpUtils.downloadFileInputStream(url,handlingUrls(address),headers);

            String fileName1=address;
            String fileName2=fileName1.substring(fileName1.lastIndexOf("/",fileName1.lastIndexOf("/")-1)+1);
            String fileName3=fileName2.substring(0,fileName2.length()-1);
            Date date = new Date();
            SimpleDateFormat dateFormat= new SimpleDateFormat("yyyyMMddhhmmss");
            String fileName=fileName3+"_"+dateFormat.format(date)+".zip";
            // 清空response
            response.reset();
            // 设置response的Header
            response.setCharacterEncoding("UTF-8");
            //Content-Disposition的作用：告知浏览器以何种方式显示响应返回的文件，用浏览器打开还是以附件的形式下载到本地保存
            //attachment表示以附件方式下载   inline表示在线打开   "Content-Disposition: inline; filename=文件名.mp3"
            // filename表示文件的默认名称，因为网络传输只支持URL编码的相关支付，因此需要将文件名URL编码后进行传输,前端收到后需要反编码才能获取到真正的名称
            response.addHeader("Content-Disposition", "attachment;filename=" + URLEncoder.encode(fileName, "UTF-8"));
            // 告知浏览器文件的大小
//            response.addHeader("Content-Length", "" + file.length());
            outputStream = response.getOutputStream();
            response.setContentType("application/octet-stream");
            byte[] b = new byte[1024];
            int len;
            //从输入流中读取一定数量的字节，并将其存储在缓冲区字节数组中，读到末尾返回-1
            while ((len = inputStream.read(b)) > 0) {
                outputStream.write(b, 0, len);
            }

        } catch (Exception e){
            log.error(e.getMessage());
            throw new BusinessException("文件下载失败");
        }finally {
            try {
                if (outputStream!=null){
                    outputStream.flush();
                }
                if (inputStream!=null){
                    inputStream.close();
                }
            } catch (IOException e) {
                log.error(e.getMessage());
            }
        }
    }
```

